<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 19 Oct 2023 13:59:54 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: feedcorpslists</title>
		<dateCreated>Tue, 17 Oct 2023 14:00:42 GMT</dateCreated>
		<dateModified>Thu, 19 Oct 2023 13:59:53 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 5, 8, 9, 19, 29, 46, 54, 63, 68, 72, 73, 74, 75, 82, 85, 96, 97, 105, 115, 135, 137, 144</expansionState>
		<vertScrollState>58</vertScrollState>
		<windowTop>77</windowTop>
		<windowLeft>638</windowLeft>
		<windowBottom>1125</windowBottom>
		<windowRight>2201</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feedcorps/lists/">
			<outline text="worknotes.md" created="Tue, 17 Oct 2023 14:01:11 GMT">
				<outline text="#### 10/19/23; 9:47:05 AM by DW" created="Thu, 19 Oct 2023 13:47:04 GMT">
					<outline text="Handle structured outlines, respect comments, only push items of type &quot;rss&quot; with an xmlUrl attribute." created="Thu, 19 Oct 2023 13:47:06 GMT"/>
					</outline>
				<outline text="#### 10/18/23; 11:49:15 AM by DW" created="Wed, 18 Oct 2023 15:49:15 GMT">
					<outline text="Side-effect of reading an outline is that it replaces the previous version in the cache. " created="Wed, 18 Oct 2023 15:49:16 GMT"/>
					</outline>
				<outline text="#### 10/17/23; 10:04:54 AM by DW" created="Tue, 17 Oct 2023 14:01:16 GMT">
					<outline text="Started. We access the readinglists we publish through the domain links.feedcorps.org, so we can move the backend if we need to, which starts out on github. It also gives us a chance to filter the contents of the feeds, as they're being served. GIven that this is the beginning of a bootstrap, we want to avoid breakage as much as possible and this is an insurance policy against breakage. " created="Tue, 17 Oct 2023 14:04:58 GMT"/>
					</outline>
				</outline>
			<outline text="package.json" created="Tue, 17 Oct 2023 14:01:06 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;feedcorpslists&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Node app that serves reading lists to FeedLand. A pump primer for a boostrap.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.1&quot;, "/>
					<outline text="&quot;main&quot;: &quot;feedcorpslists.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/feedcorpslinks.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;feedcorpslists.js&quot;,"/>
						<outline text="&quot;worknotes.md&quot;," created="Sat, 27 May 2023 12:58:26 GMT"/>
						<outline text="&quot;config.json&quot;," created="Tue, 17 Oct 2023 14:18:53 GMT"/>
						<outline text="&quot;source.opml&quot;," created="Tue, 17 Oct 2023 14:08:47 GMT"/>
						<outline text="&quot;readme.md&quot;" created="Sat, 27 May 2023 12:58:36 GMT"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;," created="Sat, 27 May 2023 13:00:51 GMT"/>
						<outline text="&quot;davegithub&quot;: &quot;*&quot;," created="Sat, 27 May 2023 13:00:51 GMT"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="feedcorpslists.js" created="Tue, 17 Oct 2023 14:00:55 GMT">
				<outline text="const myVersion = &quot;0.4.1&quot;, myProductName = &quot;feedcorpslists&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Sat, 27 May 2023 13:14:31 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);" created="Tue, 17 Oct 2023 14:33:22 GMT"/>
				<outline text="const opml = require (&quot;opml&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="const davegithub = require (&quot;davegithub&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="" created="Sat, 27 May 2023 12:51:34 GMT"/>
				<outline text="var config = {" created="Mon, 29 Nov 2021 15:52:16 GMT">
					<outline text="port: process.env.PORT || 1424," created="Fri, 16 Dec 2022 18:51:38 GMT"/>
					<outline text="urlRepoFolder: &quot;https://raw.githubusercontent.com/scripting/a8c-FeedLand-Support/main/&quot;, " created="Tue, 17 Oct 2023 14:45:37 GMT"/>
					<outline text="nameListsFolder: &quot;lists/&quot;," created="Tue, 17 Oct 2023 16:47:57 GMT"/>
					<outline text="dataFolder: &quot;&quot;," created="Tue, 17 Oct 2023 17:56:44 GMT"/>
					<outline text="userAgent: myProductName + &quot;/&quot; + myVersion," created="Sat, 27 May 2023 18:12:03 GMT"/>
					<outline text="flPostEnabled: true," created="Sat, 17 Dec 2022 16:10:45 GMT"/>
					<outline text="flAllowAccessFromAnywhere: true, " created="Tue, 30 May 2023 13:45:02 GMT"/>
					<outline text="flLogToConsole: true, //davehttp logs each request to the console"/>
					<outline text="flTraceOnError: false //davehttp does not try to catch the error" created="Fri, 16 Dec 2022 21:13:38 GMT"/>
					<outline text="};" created="Mon, 29 Nov 2021 15:52:19 GMT"/>
					</outline>
				<outline text="const fnameConfig = &quot;config.json&quot;;" created="Mon, 28 Nov 2022 23:31:55 GMT"/>
				<outline text="" created="Sat, 27 May 2023 12:52:40 GMT"/>
				<outline text="var stats = {" created="Mon, 28 Nov 2022 23:28:06 GMT">
					<outline text="ctHits: 0," created="Sat, 27 May 2023 13:48:15 GMT"/>
					<outline text="whenLastHit: undefined," created="Sat, 27 May 2023 13:48:24 GMT"/>
					<outline text="ctCacheReloads: 0," created="Tue, 17 Oct 2023 18:28:53 GMT"/>
					<outline text="whenLastCacheReload: undefined," created="Tue, 17 Oct 2023 18:29:11 GMT"/>
					<outline text="theOutline: undefined," created="Tue, 17 Oct 2023 18:07:19 GMT"/>
					<outline text="outlineCache: new Object ()" created="Tue, 17 Oct 2023 18:05:29 GMT"/>
					<outline text="};" created="Mon, 28 Nov 2022 23:28:12 GMT"/>
					</outline>
				<outline text="const fnameStats = &quot;stats.json&quot;;" created="Mon, 28 Nov 2022 23:31:55 GMT"/>
				<outline text="var flStatsChanged = false;" created="Mon, 28 Nov 2022 23:30:42 GMT"/>
				<outline text="" created="Sat, 27 May 2023 12:52:41 GMT"/>
				<outline text="function notComment (item) { //8/21/22 by DW">
					<outline text="return (!utils.getBoolean (item.isComment));"/>
					<outline text="}"/>
					</outline>
				<outline text="function statsChanged () {" created="Mon, 28 Nov 2022 23:32:35 GMT">
					<outline text="flStatsChanged = true;" created="Mon, 28 Nov 2022 23:32:47 GMT"/>
					<outline text="}" created="Mon, 28 Nov 2022 23:32:40 GMT"/>
					</outline>
				<outline text="function writeStats () {" created="Wed, 30 Nov 2022 15:47:36 GMT">
					<outline text="const f = config.dataFolder + fnameStats;" created="Sat, 27 May 2023 13:46:20 GMT"/>
					<outline text="utils.sureFilePath (f, function () {" created="Sat, 27 May 2023 13:46:42 GMT">
						<outline text="fs.writeFile (f, utils.jsonStringify (stats), function (err) {" created="Mon, 28 Nov 2022 23:30:59 GMT">
							<outline text="});" created="Mon, 28 Nov 2022 23:31:31 GMT"/>
							</outline>
						<outline text="});" created="Sat, 27 May 2023 13:46:51 GMT"/>
						</outline>
					<outline text="}" created="Wed, 30 Nov 2022 15:47:44 GMT"/>
					</outline>
				<outline text="" created="Tue, 17 Oct 2023 15:09:32 GMT"/>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Tue, 17 Oct 2023 14:56:48 GMT"/>
				<outline text="function httpRequest (url, callback) {">
					<outline text="request (url, function (err, response, data) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
							<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="callback (undefined, data) "/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getDirectory (callback) {" created="Tue, 17 Oct 2023 18:02:00 GMT">
					<outline text="davegithub.getDirectory (config.github, config.nameListsFolder, function (err, jstruct) {">
						<outline text="if (err) {" created="Tue, 17 Oct 2023 16:12:36 GMT">
							<outline text="callback (err);" created="Tue, 17 Oct 2023 16:12:39 GMT"/>
							<outline text="}" created="Tue, 17 Oct 2023 16:12:43 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 17 Oct 2023 16:12:43 GMT">
							<outline text="var theOutline = {" created="Tue, 17 Oct 2023 16:13:01 GMT">
								<outline text="opml: {" created="Tue, 17 Oct 2023 16:13:12 GMT">
									<outline text="head: {" created="Tue, 17 Oct 2023 16:13:17 GMT">
										<outline text="title: &quot;All the reading lists currently available from lists.feedcorps.org.&quot;" created="Tue, 17 Oct 2023 16:13:35 GMT"/>
										<outline text="}," created="Tue, 17 Oct 2023 16:13:21 GMT"/>
										</outline>
									<outline text="body: {" created="Tue, 17 Oct 2023 16:13:23 GMT">
										<outline text="subs: [" created="Tue, 17 Oct 2023 16:17:12 GMT">
											<outline text="]" created="Tue, 17 Oct 2023 16:17:15 GMT"/>
											</outline>
										<outline text="}" created="Tue, 17 Oct 2023 16:13:28 GMT"/>
										</outline>
									<outline text="}" created="Tue, 17 Oct 2023 16:13:16 GMT"/>
									</outline>
								<outline text="};" created="Tue, 17 Oct 2023 16:13:10 GMT"/>
								</outline>
							<outline text="jstruct.forEach (function (item) {" created="Tue, 17 Oct 2023 16:12:50 GMT">
								<outline text="{" isComment="true">
									<outline text="&quot;name&quot;: &quot;newspack.opml&quot;,"/>
									<outline text="&quot;path&quot;: &quot;lists/newspack.opml&quot;,"/>
									<outline text="&quot;sha&quot;: &quot;5103a5d1f04dbc3d315d5c9bc3e27006fd143fad&quot;,"/>
									<outline text="&quot;size&quot;: 34112,"/>
									<outline text="&quot;url&quot;: &quot;https://api.github.com/repos/scripting/a8c-FeedLand-Support/contents/lists/newspack.opml?ref=main&quot;,"/>
									<outline text="&quot;html_url&quot;: &quot;https://github.com/scripting/a8c-FeedLand-Support/blob/main/lists/newspack.opml&quot;,"/>
									<outline text="&quot;git_url&quot;: &quot;https://api.github.com/repos/scripting/a8c-FeedLand-Support/git/blobs/5103a5d1f04dbc3d315d5c9bc3e27006fd143fad&quot;,"/>
									<outline text="&quot;download_url&quot;: &quot;https://raw.githubusercontent.com/scripting/a8c-FeedLand-Support/main/lists/newspack.opml&quot;,"/>
									<outline text="&quot;type&quot;: &quot;file&quot;,"/>
									<outline text="&quot;_links&quot;: {">
										<outline text="&quot;self&quot;: &quot;https://api.github.com/repos/scripting/a8c-FeedLand-Support/contents/lists/newspack.opml?ref=main&quot;,"/>
										<outline text="&quot;git&quot;: &quot;https://api.github.com/repos/scripting/a8c-FeedLand-Support/git/blobs/5103a5d1f04dbc3d315d5c9bc3e27006fd143fad&quot;,"/>
										<outline text="&quot;html&quot;: &quot;https://github.com/scripting/a8c-FeedLand-Support/blob/main/lists/newspack.opml&quot;"/>
										<outline text="}"/>
										</outline>
									<outline text="},"/>
									</outline>
								<outline text="if (utils.endsWith (item.name, &quot;.opml&quot;)) {" created="Tue, 17 Oct 2023 16:54:44 GMT">
									<outline text="theOutline.opml.body.subs.push ({" created="Tue, 17 Oct 2023 16:17:39 GMT">
										<outline text="text: item.name," created="Tue, 17 Oct 2023 16:18:03 GMT"/>
										<outline text="type: &quot;include&quot;," created="Tue, 17 Oct 2023 16:19:42 GMT"/>
										<outline text="url: &quot;https://lists.feedcorps.org/&quot; + item.name" created="Tue, 17 Oct 2023 16:20:21 GMT"/>
										<outline text="});" created="Tue, 17 Oct 2023 16:17:57 GMT"/>
										</outline>
									<outline text="}" created="Tue, 17 Oct 2023 16:54:55 GMT"/>
									</outline>
								<outline text="});" created="Tue, 17 Oct 2023 16:12:57 GMT"/>
								</outline>
							<outline text="" created="Tue, 17 Oct 2023 17:58:25 GMT"/>
							<outline text="stats.theOutline = theOutline;" created="Tue, 17 Oct 2023 17:58:25 GMT"/>
							<outline text="statsChanged ();" created="Tue, 17 Oct 2023 17:58:40 GMT"/>
							<outline text="" created="Tue, 17 Oct 2023 18:02:42 GMT"/>
							<outline text="callback (undefined, theOutline);"/>
							<outline text="}" created="Tue, 17 Oct 2023 16:12:45 GMT"/>
							</outline>
						<outline text="});" created="Tue, 17 Oct 2023 16:12:32 GMT"/>
						</outline>
					<outline text="}" created="Tue, 17 Oct 2023 18:02:09 GMT"/>
					</outline>
				<outline text="function getOutline (fname, callback) {" created="Tue, 17 Oct 2023 18:09:38 GMT">
					<outline text="const url = config.urlRepoFolder + config.nameListsFolder + fname + &quot;?nocache=&quot; + utils.random (1, 100000);" created="Tue, 17 Oct 2023 14:59:40 GMT"/>
					<outline text="httpRequest (url, function (err, opmltext) {" created="Tue, 17 Oct 2023 14:59:40 GMT">
						<outline text="if (err) {" created="Tue, 17 Oct 2023 15:01:52 GMT">
							<outline text="callback (err);" created="Tue, 17 Oct 2023 15:01:54 GMT"/>
							<outline text="}" created="Tue, 17 Oct 2023 15:01:58 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 17 Oct 2023 15:01:59 GMT">
							<outline text="opml.parse (opmltext, function (err, theOutline) {" created="Wed, 30 Jun 2021 13:16:34 GMT">
								<outline text="if (err) {" created="Wed, 18 Oct 2023 15:47:34 GMT">
									<outline text="callback (err);" created="Wed, 18 Oct 2023 15:47:42 GMT"/>
									<outline text="}" created="Wed, 18 Oct 2023 15:47:36 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 18 Oct 2023 15:47:37 GMT">
									<outline text="stats.outlineCache [fname] = theOutline;" created="Tue, 17 Oct 2023 18:19:32 GMT"/>
									<outline text="callback (undefined, theOutline);" created="Wed, 18 Oct 2023 15:47:50 GMT"/>
									<outline text="}" created="Wed, 18 Oct 2023 15:47:39 GMT"/>
									</outline>
								<outline text="});" created="Wed, 18 Oct 2023 15:47:32 GMT"/>
								</outline>
							<outline text="}" created="Tue, 17 Oct 2023 15:02:00 GMT"/>
							</outline>
						<outline text="});" created="Tue, 17 Oct 2023 15:00:28 GMT"/>
						</outline>
					<outline text="}" created="Tue, 17 Oct 2023 18:09:46 GMT"/>
					</outline>
				<outline text="" created="Tue, 17 Oct 2023 18:05:54 GMT"/>
				<outline text="function loadOutlineCache (callback) {" created="Tue, 17 Oct 2023 18:05:55 GMT">
					<outline text="const outlinelist = stats.theOutline.opml.body.subs;" created="Tue, 17 Oct 2023 18:06:58 GMT"/>
					<outline text="function doNext (ix) {" created="Tue, 17 Oct 2023 18:08:29 GMT">
						<outline text="if (ix &lt; outlinelist.length) {" created="Tue, 17 Oct 2023 18:08:46 GMT">
							<outline text="getOutline (outlinelist [ix].text, function (err, theOutline) {" created="Tue, 17 Oct 2023 18:18:41 GMT">
								<outline text="stats.outlineCache [outlinelist [ix].text] = theOutline;" created="Tue, 17 Oct 2023 18:19:32 GMT"/>
								<outline text="doNext (ix + 1);" created="Tue, 17 Oct 2023 18:20:01 GMT"/>
								<outline text="});" created="Tue, 17 Oct 2023 18:19:29 GMT"/>
								</outline>
							<outline text="}" created="Tue, 17 Oct 2023 18:08:56 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 17 Oct 2023 18:08:57 GMT">
							<outline text="statsChanged ();" created="Tue, 17 Oct 2023 18:20:13 GMT"/>
							<outline text="callback ();" created="Tue, 17 Oct 2023 18:08:59 GMT"/>
							<outline text="}" created="Tue, 17 Oct 2023 18:09:03 GMT"/>
							</outline>
						<outline text="}" created="Tue, 17 Oct 2023 18:08:37 GMT"/>
						</outline>
					<outline text="doNext (0);" created="Tue, 17 Oct 2023 18:08:14 GMT"/>
					<outline text="}" created="Tue, 17 Oct 2023 18:06:11 GMT"/>
					</outline>
				<outline text="function reloadCaches (callback) {" created="Tue, 17 Oct 2023 18:30:45 GMT">
					<outline text="getDirectory (function () {" created="Tue, 17 Oct 2023 18:03:59 GMT">
						<outline text="loadOutlineCache (function () {" created="Tue, 17 Oct 2023 18:06:24 GMT">
							<outline text="stats.ctCacheReloads++;" created="Tue, 17 Oct 2023 18:28:26 GMT"/>
							<outline text="stats.whenLastCacheReload = new Date ();" created="Tue, 17 Oct 2023 18:28:34 GMT"/>
							<outline text="statsChanged ();" created="Tue, 17 Oct 2023 18:29:34 GMT"/>
							<outline text="if (callback !== undefined) {" created="Tue, 17 Oct 2023 18:31:05 GMT">
								<outline text="callback ();" created="Tue, 17 Oct 2023 18:31:13 GMT"/>
								<outline text="}" created="Tue, 17 Oct 2023 18:31:15 GMT"/>
								</outline>
							<outline text="});" created="Tue, 17 Oct 2023 18:06:28 GMT"/>
							</outline>
						<outline text="});" created="Tue, 17 Oct 2023 18:04:04 GMT"/>
						</outline>
					<outline text="}" created="Tue, 17 Oct 2023 18:30:56 GMT"/>
					</outline>
				<outline text="" created="Tue, 17 Oct 2023 22:23:08 GMT"/>
				<outline text="function outlineToReadinglistJson (theOutline) {" created="Tue, 17 Oct 2023 22:23:08 GMT">
					<outline text="Changes" isComment="true" created="Tue, 17 Oct 2023 22:25:55 GMT">
						<outline text="10/17/23; 6:26:02 PM by DW" created="Tue, 17 Oct 2023 22:26:01 GMT">
							<outline text="{">
								<outline text="&quot;opmlUrl&quot;: &quot;http://scripting.com/publicfolder/feedland/subscriptionLists/starterfeeds.opml&quot;,"/>
								<outline text="&quot;whenCreated&quot;: &quot;2023-10-16T17:59:25.000Z&quot;,"/>
								<outline text="&quot;title&quot;: &quot;FeedLand starter feeds&quot;,"/>
								<outline text="&quot;description&quot;: &quot;A random set of 30 feeds for people getting started with FeedLand. We regenerate this list periodically.&quot;,"/>
								<outline text="&quot;ctChecks&quot;: 321,"/>
								<outline text="&quot;whenChecked&quot;: &quot;2023-10-17T22:12:18.000Z&quot;,"/>
								<outline text="&quot;feedUrls&quot;: [">
									<outline text="&quot;http://feeds.feedburner.com/Torrentfreak&quot;,"/>
									<outline text="&quot;https://ma.tt/feed/&quot;,"/>
									<outline text="&quot;http://www.ethanzuckerman.com/blog/?feed=rss2&quot;,"/>
									<outline text="&quot;http://www.npr.org/rss/podcast.php?id=510310&quot;,"/>
									<outline text="&quot;http://tweetfeed.org/davewiner/rss.xml&quot;,"/>
									<outline text="&quot;http://www.humansofnewyork.com/rss&quot;,"/>
									<outline text="&quot;http://www.theverge.com/rss/index.xml&quot;,"/>
									<outline text="&quot;http://scripting.com/publicfolder/feedland/feeds/axios.xml&quot;,"/>
									<outline text="&quot;https://pressthink.org/feed/&quot;,"/>
									<outline text="&quot;https://rss.nytimes.com/services/xml/rss/nyt/Television.xml&quot;,"/>
									<outline text="&quot;https://world.hey.com/jason/feed.atom&quot;,"/>
									<outline text="&quot;https://radioopensource.org/feed/&quot;,"/>
									<outline text="&quot;https://500songs.com/feed/podcast/&quot;,"/>
									<outline text="&quot;http://feeds.thisamericanlife.org/talpodcast&quot;,"/>
									<outline text="&quot;https://www.yahoo.com/tech/rss&quot;,"/>
									<outline text="&quot;http://feeds.wnyc.org/newyorkerradiohour&quot;,"/>
									<outline text="&quot;http://scripting.com/rss.xml&quot;,"/>
									<outline text="&quot;https://podnews.net/rss&quot;,"/>
									<outline text="&quot;https://feeds.arstechnica.com/arstechnica/index&quot;,"/>
									<outline text="&quot;http://www.marco.org/rss&quot;,"/>
									<outline text="&quot;http://feeds.feedburner.com/NiemanLabFuego&quot;,"/>
									<outline text="&quot;http://feeds.wnyc.org/radiolab&quot;,"/>
									<outline text="&quot;http://www.techmeme.com/feed.xml&quot;,"/>
									<outline text="&quot;http://feeds.feedblitz.com/SethsBlog&quot;,"/>
									<outline text="&quot;http://www.memeorandum.com/feed.xml&quot;,"/>
									<outline text="&quot;https://wordpress.org/news/feed/&quot;,"/>
									<outline text="&quot;https://www.politico.eu/feed/&quot;,"/>
									<outline text="&quot;http://data.feedland.org/likes.xml&quot;,"/>
									<outline text="&quot;https://dri.es/rss.xml&quot;,"/>
									<outline text="&quot;https://www.techrepublic.com/rssfeeds/articles/&quot;"/>
									<outline text="]"/>
									</outline>
								<outline text="}"/>
								</outline>
							</outline>
						</outline>
					<outline text="const subslist = theOutline.opml.body.subs;" created="Tue, 17 Oct 2023 22:23:20 GMT"/>
					<outline text="var feedlistArray = new Array ();" created="Tue, 17 Oct 2023 22:23:45 GMT"/>
					<outline text="" created="Wed, 18 Oct 2023 12:46:39 GMT"/>
					<outline text="function pushFeedOnFeedListArray (item) {" created="Thu, 19 Oct 2023 13:45:04 GMT">
						<outline text="const outlineInCache = stats.outlineCache [item.text];" created="Wed, 18 Oct 2023 12:46:39 GMT"/>
						<outline text="const outlineHead = outlineInCache.opml.head;" created="Wed, 18 Oct 2023 12:59:57 GMT"/>
						<outline text="var feedUrls = new Array ();" created="Wed, 18 Oct 2023 12:55:04 GMT"/>
						<outline text="opml.visitAll (outlineInCache, function (node) {" created="Sat, 03 Jul 2021 19:31:57 GMT">
							<outline text="if (notComment (node)) {" created="Sat, 20 Aug 2022 14:11:54 GMT">
								<outline text="if (node.type == &quot;rss&quot;) {" created="Sun, 21 Aug 2022 18:00:29 GMT">
									<outline text="if (node.xmlUrl !== undefined) {" created="Sat, 20 Aug 2022 14:12:11 GMT">
										<outline text="feedUrls.push (node.xmlUrl);" created="Wed, 18 Oct 2023 12:55:39 GMT"/>
										<outline text="}" created="Sat, 20 Aug 2022 14:12:16 GMT"/>
										</outline>
									<outline text="}" created="Sun, 21 Aug 2022 18:00:33 GMT"/>
									</outline>
								<outline text="}" created="Sat, 20 Aug 2022 14:11:56 GMT"/>
								</outline>
							<outline text="return (true); //keep visiting" created="Sat, 03 Jul 2021 19:32:47 GMT"/>
							<outline text="});" created="Sat, 03 Jul 2021 19:32:16 GMT"/>
							</outline>
						<outline text="outlineInCache.opml.body.subs.forEach (function (item) {" isComment="true" created="Wed, 18 Oct 2023 12:55:04 GMT">
							<outline text="feedUrls.push (item.xmlUrl);" created="Wed, 18 Oct 2023 12:55:39 GMT"/>
							<outline text="});" created="Wed, 18 Oct 2023 12:55:33 GMT"/>
							</outline>
						<outline text="feedlistArray.push ({" created="Tue, 17 Oct 2023 22:24:38 GMT">
							<outline text="opmlUrl: item.url," created="Tue, 17 Oct 2023 22:26:31 GMT"/>
							<outline text="title: outlineHead.title," created="Tue, 17 Oct 2023 22:27:04 GMT"/>
							<outline text="description: outlineHead.description," created="Tue, 17 Oct 2023 22:27:22 GMT"/>
							<outline text="whenCreated: outlineHead.dateCreated," created="Tue, 17 Oct 2023 22:27:36 GMT"/>
							<outline text="whenModified: outlineHead.dateModified," created="Wed, 18 Oct 2023 12:58:54 GMT"/>
							<outline text="ctChecks: undefined," created="Tue, 17 Oct 2023 22:27:41 GMT"/>
							<outline text="feedUrls" created="Tue, 17 Oct 2023 22:27:46 GMT"/>
							<outline text="});" created="Tue, 17 Oct 2023 22:24:47 GMT"/>
							</outline>
						<outline text="}" created="Thu, 19 Oct 2023 13:45:15 GMT"/>
						</outline>
					<outline text="" created="Thu, 19 Oct 2023 13:43:19 GMT"/>
					<outline text="opml.visitAll (theOutline, function (node) {" created="Sat, 03 Jul 2021 19:31:57 GMT">
						<outline text="if (notComment (node)) {" created="Sat, 20 Aug 2022 14:11:54 GMT">
							<outline text="pushFeedOnFeedListArray (node);" created="Mon, 08 Aug 2022 21:01:47 GMT"/>
							<outline text="}" created="Sat, 20 Aug 2022 14:11:56 GMT"/>
							</outline>
						<outline text="return (true); //keep visiting" created="Sat, 03 Jul 2021 19:32:47 GMT"/>
						<outline text="});" created="Sat, 03 Jul 2021 19:32:16 GMT"/>
						</outline>
					<outline text="" created="Thu, 19 Oct 2023 13:43:19 GMT"/>
					<outline text="" created="Thu, 19 Oct 2023 13:43:19 GMT"/>
					<outline text="" created="Thu, 19 Oct 2023 13:43:19 GMT"/>
					<outline text="subslist.forEach (function (item) {" isComment="true" created="Tue, 17 Oct 2023 22:23:55 GMT">
						<outline text="const outlineInCache = stats.outlineCache [item.text];" created="Wed, 18 Oct 2023 12:46:39 GMT"/>
						<outline text="const outlineHead = outlineInCache.opml.head;" created="Wed, 18 Oct 2023 12:59:57 GMT"/>
						<outline text="var feedUrls = new Array ();" created="Wed, 18 Oct 2023 12:55:04 GMT"/>
						<outline text="outlineInCache.opml.body.subs.forEach (function (item) {" created="Wed, 18 Oct 2023 12:55:04 GMT">
							<outline text="feedUrls.push (item.xmlUrl);" created="Wed, 18 Oct 2023 12:55:39 GMT"/>
							<outline text="});" created="Wed, 18 Oct 2023 12:55:33 GMT"/>
							</outline>
						<outline text="jstruct.push ({" created="Tue, 17 Oct 2023 22:24:38 GMT">
							<outline text="opmlUrl: item.url," created="Tue, 17 Oct 2023 22:26:31 GMT"/>
							<outline text="title: outlineHead.title," created="Tue, 17 Oct 2023 22:27:04 GMT"/>
							<outline text="description: outlineHead.description," created="Tue, 17 Oct 2023 22:27:22 GMT"/>
							<outline text="whenCreated: outlineHead.dateCreated," created="Tue, 17 Oct 2023 22:27:36 GMT"/>
							<outline text="whenModified: outlineHead.dateModified," created="Wed, 18 Oct 2023 12:58:54 GMT"/>
							<outline text="ctChecks: undefined," created="Tue, 17 Oct 2023 22:27:41 GMT"/>
							<outline text="feedUrls" created="Tue, 17 Oct 2023 22:27:46 GMT"/>
							<outline text="});" created="Tue, 17 Oct 2023 22:24:47 GMT"/>
							</outline>
						<outline text="});" created="Tue, 17 Oct 2023 22:24:05 GMT"/>
						</outline>
					<outline text="return (feedlistArray);" created="Tue, 17 Oct 2023 22:28:16 GMT"/>
					<outline text="}" created="Tue, 17 Oct 2023 22:23:13 GMT"/>
					</outline>
				<outline text="" created="Thu, 29 Jun 2023 16:05:41 GMT"/>
				<outline text="function handleHttpRequest (theRequest) {" created="Sat, 06 Nov 2021 20:25:05 GMT">
					<outline text="var now = new Date ();"/>
					<outline text="const params = theRequest.params;"/>
					<outline text="function returnRedirect (url, code) { ">
						<outline text="var headers = {">
							<outline text="location: url"/>
							<outline text="};"/>
							</outline>
						<outline text="if (code === undefined) {">
							<outline text="code = 302;"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, headers);"/>
						<outline text="}"/>
						<outline text=""/>
						</outline>
					<outline text="function returnPlainText (theString) {">
						<outline text="if (theString === undefined) {" created="Sat, 17 Dec 2022 15:19:03 GMT">
							<outline text="theString = &quot;&quot;;" created="Sat, 17 Dec 2022 15:19:12 GMT"/>
							<outline text="}" created="Sat, 17 Dec 2022 15:19:19 GMT"/>
							</outline>
						<outline text="console.log (&quot;returnPlainText: theString == &quot; + theString + &quot;, typeof theString == &quot; + typeof theString);" isComment="true" created="Sat, 17 Dec 2022 14:28:03 GMT"/>
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, theString);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnXml (xmltext) {">
						<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, xmltext);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnNotFound () {" created="Fri, 16 Dec 2022 19:04:28 GMT">
						<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
						<outline text="}" created="Fri, 16 Dec 2022 19:04:33 GMT"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnJsontext (jsontext) { //9/14/22 by DW">
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, jsontext.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnOpmlFile (fname) {" created="Tue, 17 Oct 2023 15:01:27 GMT">
						<outline text="getOutline (fname, function (err, theOutline) {" created="Tue, 17 Oct 2023 18:12:20 GMT">
							<outline text="if (err) {" created="Tue, 17 Oct 2023 18:12:59 GMT">
								<outline text="returnError (err);" created="Tue, 17 Oct 2023 18:13:02 GMT"/>
								<outline text="}" created="Tue, 17 Oct 2023 18:13:06 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 17 Oct 2023 18:13:06 GMT">
								<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opml.stringify (theOutline));"/>
								<outline text="}" created="Tue, 17 Oct 2023 18:13:08 GMT"/>
								</outline>
							<outline text="});" created="Tue, 17 Oct 2023 18:12:54 GMT"/>
							</outline>
						<outline text="" isComment="true" created="Tue, 17 Oct 2023 18:12:20 GMT"/>
						<outline text="const url = config.urlRepoFolder + config.nameListsFolder + fname;" isComment="true" created="Tue, 17 Oct 2023 14:59:40 GMT"/>
						<outline text="httpRequest (url, function (err, opmltext) {" isComment="true" created="Tue, 17 Oct 2023 14:59:40 GMT">
							<outline text="if (err) {" created="Tue, 17 Oct 2023 15:01:52 GMT">
								<outline text="returnError (err);" created="Tue, 17 Oct 2023 15:01:54 GMT"/>
								<outline text="}" created="Tue, 17 Oct 2023 15:01:58 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 17 Oct 2023 15:01:59 GMT">
								<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opmltext);"/>
								<outline text="}" created="Tue, 17 Oct 2023 15:02:00 GMT"/>
								</outline>
							<outline text="});" created="Tue, 17 Oct 2023 15:00:28 GMT"/>
							</outline>
						<outline text="}" created="Tue, 17 Oct 2023 15:01:34 GMT"/>
						</outline>
					<outline text="function httpReturn (err, returnedValue) {">
						<outline text="Changed" isComment="true" created="Wed, 14 Sep 2022 19:47:30 GMT">
							<outline text="9/14/22; 3:47:35 PM by DW" created="Wed, 14 Sep 2022 19:47:34 GMT">
								<outline text="If the returned value is an object, call returnData, but if it's something else, return it as a string. " created="Wed, 14 Sep 2022 19:47:36 GMT"/>
								<outline text="In all cases, the returned type is application/json." created="Wed, 14 Sep 2022 19:48:09 GMT"/>
								<outline text="This allows the river routines to convert the object to jsontext so it can cache that instead of an object." created="Wed, 14 Sep 2022 19:48:38 GMT"/>
								</outline>
							</outline>
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (typeof returnedValue == &quot;object&quot;) {" created="Wed, 14 Sep 2022 19:49:36 GMT">
								<outline text="returnData (returnedValue);"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:49:54 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 14 Sep 2022 19:50:07 GMT">
								<outline text="returnJsontext (returnedValue); //9/14/22 by DW" created="Wed, 14 Sep 2022 19:52:50 GMT"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:50:09 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="" created="Sat, 27 May 2023 13:47:51 GMT"/>
					<outline text="stats.ctHits++;" created="Sat, 27 May 2023 13:47:51 GMT"/>
					<outline text="stats.whenLastHit = now;" created="Sat, 27 May 2023 13:47:57 GMT"/>
					<outline text="statsChanged ();" created="Sat, 27 May 2023 13:48:04 GMT"/>
					<outline text="" created="Sat, 27 May 2023 13:47:51 GMT"/>
					<outline text="switch (theRequest.method) {" created="Thu, 01 May 2014 20:42:04 GMT" pgfnum="40803">
						<outline text="case &quot;POST&quot;:" isComment="true" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="const postparams = qs.parse (theRequest.postBody);" created="Sat, 27 May 2023 14:55:54 GMT"/>
							<outline text="const servicename = utils.stringDelete (theRequest.lowerpath, 1, 1); //delete / at beginning of path" created="Thu, 29 Jun 2023 16:10:18 GMT"/>
							<outline text="post (servicename, postparams, httpReturn); //6/29/23 by DW" created="Thu, 29 Jun 2023 16:09:49 GMT"/>
							<outline text="switch (theRequest.lowerpath) {" isComment="true">
								<outline text="case &quot;/mastodon&quot;:" created="Sat, 27 May 2023 13:54:28 GMT">
									<outline text="postToMastodon (postparams, httpReturn);" created="Sat, 27 May 2023 13:54:56 GMT"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="case &quot;/bluesky&quot;:" created="Sat, 27 May 2023 13:54:28 GMT">
									<outline text="postToBluesky (postparams, httpReturn);" created="Sat, 27 May 2023 13:54:56 GMT"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="case &quot;/wordpress&quot;:" created="Sat, 27 May 2023 13:54:28 GMT">
									<outline text="postToWordpress (postparams, httpReturn);" created="Sat, 27 May 2023 13:54:56 GMT"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="returnNotFound ()"/>
									<outline text="return (true);"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							<outline text="break;" created="Sat, 17 Dec 2022 15:21:18 GMT"/>
							</outline>
						<outline text="case &quot;GET&quot;:" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/&quot;: " created="Thu, 03 Nov 2022 19:29:32 GMT">
									<outline text="getDirectory (function (err, theOutline) {" created="Tue, 17 Oct 2023 18:03:19 GMT">
										<outline text="if (err) {" created="Tue, 17 Oct 2023 18:17:25 GMT">
											<outline text="returnError (err);" created="Tue, 17 Oct 2023 18:17:34 GMT"/>
											<outline text="}" created="Tue, 17 Oct 2023 18:17:29 GMT"/>
											</outline>
										<outline text="else {" created="Tue, 17 Oct 2023 18:17:29 GMT">
											<outline text="switch (utils.stringLower (params.format)) {" created="Tue, 17 Oct 2023 22:21:41 GMT">
												<outline text="case &quot;json&quot;:" created="Tue, 17 Oct 2023 22:21:51 GMT">
													<outline text="returnData (outlineToReadinglistJson (theOutline));"/>
													<outline text="break;" created="Tue, 17 Oct 2023 22:21:59 GMT"/>
													</outline>
												<outline text="default:" created="Tue, 17 Oct 2023 22:22:06 GMT">
													<outline text="returnXml (opml.stringify (theOutline));"/>
													<outline text="break;" created="Tue, 17 Oct 2023 22:21:59 GMT"/>
													</outline>
												<outline text="}" created="Tue, 17 Oct 2023 22:21:50 GMT"/>
												</outline>
											<outline text="}" created="Tue, 17 Oct 2023 18:17:31 GMT"/>
											</outline>
										<outline text="});" created="Tue, 17 Oct 2023 18:17:21 GMT"/>
										</outline>
									<outline text="return (true);"/>
									</outline>
								<outline text="default: " created="Thu, 30 Jun 2022 15:30:25 GMT">
									<outline text="returnOpmlFile (theRequest.lowerpath);" created="Fri, 16 Dec 2022 20:51:50 GMT"/>
									<outline text="break;" created="Thu, 30 Jun 2022 15:30:27 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							<outline text="break;" created="Thu, 01 May 2014 20:42:44 GMT" pgfnum="40808"/>
							</outline>
						<outline text="}" created="Thu, 01 May 2014 20:42:10 GMT" pgfnum="40804"/>
						</outline>
					<outline text="}" created="Sat, 06 Nov 2021 20:25:18 GMT"/>
					</outline>
				<outline text="" created="Sat, 27 May 2023 13:04:31 GMT"/>
				<outline text="function everyMinute () {" created="Wed, 30 Nov 2022 15:49:21 GMT">
					<outline text="var now = new Date ();" created="Wed, 05 May 2021 19:06:15 GMT"/>
					<outline text="if ((now.getMinutes () % 5) == 0) { //refresh caches every 5 minutes" created="Wed, 05 May 2021 19:06:21 GMT">
						<outline text="reloadCaches ();" created="Tue, 17 Oct 2023 18:31:33 GMT"/>
						<outline text="}" created="Wed, 05 May 2021 19:06:39 GMT"/>
						</outline>
					<outline text="}" created="Wed, 30 Nov 2022 15:49:27 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Mon, 28 Nov 2022 23:09:58 GMT">
					<outline text="if (flStatsChanged) {" created="Mon, 28 Nov 2022 23:30:53 GMT">
						<outline text="flStatsChanged = false;" created="Mon, 28 Nov 2022 23:30:56 GMT"/>
						<outline text="writeStats ();" created="Wed, 30 Nov 2022 15:47:54 GMT"/>
						<outline text="}" created="Mon, 28 Nov 2022 23:31:43 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Nov 2022 23:10:02 GMT"/>
					</outline>
				<outline text="function readConfig (fname, data, callback) {" created="Wed, 16 Nov 2022 15:42:09 GMT">
					<outline text="fs.readFile (fname, function (err, jsontext) {" created="Wed, 16 Nov 2022 15:42:34 GMT">
						<outline text="if (!err) {" created="Wed, 16 Nov 2022 15:42:51 GMT">
							<outline text="var jstruct;" created="Wed, 16 Nov 2022 15:42:50 GMT"/>
							<outline text="try {" created="Wed, 16 Nov 2022 15:43:21 GMT">
								<outline text="jstruct = JSON.parse (jsontext);" created="Wed, 16 Nov 2022 15:43:57 GMT"/>
								<outline text="for (var x in jstruct) {" created="Wed, 16 Nov 2022 15:44:48 GMT">
									<outline text="data [x] = jstruct [x];" created="Wed, 16 Nov 2022 15:44:54 GMT"/>
									<outline text="}" created="Wed, 16 Nov 2022 15:45:01 GMT"/>
									</outline>
								<outline text="}" created="Wed, 16 Nov 2022 15:43:26 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Wed, 16 Nov 2022 15:43:26 GMT">
								<outline text="console.log (&quot;readConfig: fname == &quot; + fname + &quot;, err.message == &quot; + utils.jsonStringify (err.message));" created="Wed, 16 Nov 2022 15:43:30 GMT"/>
								<outline text="}" created="Wed, 16 Nov 2022 15:43:43 GMT"/>
								</outline>
							<outline text="}" created="Wed, 16 Nov 2022 15:42:55 GMT"/>
							</outline>
						<outline text="callback ();" created="Wed, 16 Nov 2022 15:49:59 GMT"/>
						<outline text="});" created="Wed, 16 Nov 2022 15:42:44 GMT"/>
						</outline>
					<outline text="}" created="Wed, 16 Nov 2022 15:42:33 GMT"/>
					</outline>
				<outline text="" created="Sat, 27 May 2023 12:52:41 GMT"/>
				<outline text="readConfig (fnameConfig, config, function (err) {" created="Tue, 17 Oct 2023 15:09:49 GMT">
					<outline text="console.log (&quot;\n&quot; + myProductName + &quot; v&quot; + myVersion + &quot;: &quot; + new Date ().toLocaleTimeString () + &quot;, port == &quot; + config.port + &quot;.\n&quot;);"/>
					<outline text="console.log (&quot;\nconfig == &quot; + utils.jsonStringify (config));"/>
					<outline text="config.github.userAgent = config.userAgent;" created="Tue, 17 Oct 2023 16:04:20 GMT"/>
					<outline text="reloadCaches (function () { //causes current directory to be cached" created="Tue, 17 Oct 2023 18:03:59 GMT">
						<outline text="davehttp.start (config, handleHttpRequest);"/>
						<outline text="utils.runEveryMinute (everyMinute);" created="Wed, 30 Nov 2022 15:50:13 GMT"/>
						<outline text="setInterval (everySecond, 1000);" created="Mon, 28 Nov 2022 23:13:18 GMT"/>
						<outline text="});" created="Tue, 17 Oct 2023 18:04:04 GMT"/>
						</outline>
					<outline text="});" created="Tue, 17 Oct 2023 15:09:59 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Tue, 17 Oct 2023 14:17:33 GMT">
				<outline text="# feedcorpsLists">
					<outline text="Node app that serves reading lists to FeedLand. A pump primer for a boostrap."/>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Tue, 17 Oct 2023 14:15:48 GMT">
				<outline text="{" created="Tue, 17 Oct 2023 14:15:51 GMT">
					<outline text="}" created="Tue, 17 Oct 2023 14:15:52 GMT"/>
					</outline>
				</outline>
			<outline text="build script" created="Tue, 17 Oct 2023 14:13:04 GMT">
				<outline text="nodeEditorSuite.utilities.buildIFeedcorpsLists ()" created="Sun, 06 Nov 2022 15:51:50 GMT"/>
				</outline>
			</outline>
		</body>
	</opml>
